{"version":3,"sources":["components/PropTypes/PropTypes.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/Form/Form.js","components/Filters/Filters.js","App.js","index.js"],"names":["TodoShape","id","PropTypes","string","isRequired","todoTitle","completed","bool","TodoItem","arrayOf","shape","title","func","state","isEditing","titleToEdit","_this","props","handleDoubClick","setState","handleTitleChange","_ref","value","handleTitleChangeEnd","handleTitleSubmit","e","preventDefault","_this$props","handleTodoTitleEdit","_this2","this","_this$props2","destroyTodo","changeStatus","_this$state","react_default","a","createElement","className","type","name","checked","onChange","onSubmit","target","onBlur","htmlFor","onClick","onDoubleClick","React","Component","TodoList","todos","changeStatusAll","handleEdit","footerDisplay","style","display","map","todo","components_TodoItem_TodoItem","key","Form","onEnterDown","event","trim","AddTodo","shortid","generate","placeholder","onKeyDown","Filters","active","stateProps","handleFieldChange","activeProblems","completedAppears","clearCompleted","href","onFocus","App","completedAll","inputFormValue","concat","Object","toConsumableArray","_ref2","filter","_ref3","_objectSpread","_ref4","count","length","Boolean","_ref5","_ref6","filterTodos","filteredTodos","localStorage","setItem","JSON","stringify","getItem","components_Form_Form","components_TodoList_TodoList","components_Filters_Filters","ReactDOM","render","src_App","document","getElementById"],"mappings":"mSAEMA,EAAY,CAChBC,GAAIC,IAAUC,OAAOC,WACrBC,UAAWH,IAAUC,OAAOC,WAC5BE,UAAWJ,IAAUK,KAAKH,YCgFbI,GD5ENN,IAAUO,QAAQP,IAAUQ,MAAM,CACvCC,MAAOT,IAAUC,OACjBF,GAAIC,IAAUC,OACdG,UAAWJ,IAAUK,QAEVL,IAAUU,KAAKR,WACdF,IAAUU,KAAKR,WACRF,IAAUU,KAAKR,WAI1BF,IAAUO,QAAQP,IAAUQ,MAAMV,IAC/BE,IAAUU,KAAKR,WACdF,IAAUU,KAAKR,WACZF,IAAUU,KAAKR,WACXF,IAAUU,KAAKR,WAI3BF,IAAUU,KAAKR,WAIDF,IAAUU,KACfV,IAAUU,KACLV,IAAUU,KACdV,IAAUU,KACHV,IAAUU,gNC/BpCC,MAAQ,CACNC,WAAW,EACXC,YAAaC,EAAKC,MAAMN,SAG1BO,gBAAkB,kBAAMF,EAAKG,SAAS,CAAEL,WAAW,OAEnDM,kBAAoB,SAAAC,GAAe,IAAZC,EAAYD,EAAZC,MACrBN,EAAKG,SAAS,CAAEJ,YAAaO,OAG/BC,qBAAuB,kBAAMP,EAAKG,SAAS,CAAEL,WAAW,OAExDU,kBAAoB,SAACC,GACnBA,EAAEC,iBADuB,IAAAC,EAEWX,EAAKC,OAEzCW,EAJyBD,EAEjBC,qBAFiBD,EAEI1B,GAELe,EAAKH,MAAME,aACnCC,EAAKG,SAAS,CAAEL,WAAW,6EAGpB,IAAAe,EAAAC,KAAAC,EAOHD,KAAKb,MALPhB,EAFK8B,EAEL9B,GACAU,EAHKoB,EAGLpB,MACAL,EAJKyB,EAILzB,UACA0B,EALKD,EAKLC,YACAC,EANKF,EAMLE,aANKC,EAS4BJ,KAAKjB,MAAhCC,EATDoB,EASCpB,UAAWC,EATZmB,EASYnB,YAEnB,OACEoB,EAAAC,EAAAC,cAAA,MAAIC,UAAWhC,EAAY,YAAc,IACvC6B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,SACEE,KAAK,WACLD,UAAU,SACVE,KAAMvC,EACNA,GAAIA,EACJwC,QAASnC,EACToC,SAAU,kBAAMT,EAAahC,MAE9Ba,EAEGqB,EAAAC,EAAAC,cAAA,QACEC,UAAU,kBACVK,SAAU,SAAAlB,GAAC,OAAII,EAAKL,kBAAkBC,KAEtCU,EAAAC,EAAAC,cAAA,SACEC,UAAU,mBACVC,KAAK,OACLjB,MAAOP,EACP2B,SAAU,SAAAjB,GAAC,OAAII,EAAKT,kBAAkBK,EAAEmB,SACxCC,OAAQf,KAAKP,wBAKjBY,EAAAC,EAAAC,cAAA,SACES,QAAS7C,EACT8C,QAAS,SAAAtB,GAAC,OAAIA,EAAEC,kBAChBsB,cAAelB,KAAKZ,iBAEnBP,GAGPwB,EAAAC,EAAAC,cAAA,UACEE,KAAK,SACLD,UAAU,UACVS,QAAS,kBAAMf,EAAY/B,eAvEhBgD,IAAMC,YCuCdC,EArCE,SAAA9B,GAAA,IACf+B,EADe/B,EACf+B,MACApB,EAFeX,EAEfW,YACAC,EAHeZ,EAGfY,aACAoB,EAJehC,EAIfgC,gBAEAzB,GANeP,EAKfiC,WALejC,EAMfO,qBACA2B,EAPelC,EAOfkC,cAPe,OASfpB,EAAAC,EAAAC,cAAA,WAASC,UAAU,OAAOkB,MAAO,CAAEC,QAASF,IAC1CpB,EAAAC,EAAAC,cAAA,SAAOE,KAAK,WAAWtC,GAAG,aAAaqC,UAAU,eACjDH,EAAAC,EAAAC,cAAA,SACEU,QAASM,EACTP,QAAQ,aACRU,MAAO,CAAEC,QAAS,UAHpB,wBAOAtB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACVc,EAAMM,IAAI,SAAAC,GAAI,OACdxB,EAAAC,EAAAC,cAACuB,EAAD,CACE3B,aAAcA,EACdD,YAAaA,EACbrB,MAAOgD,EAAKtD,UACZC,UAAWqD,EAAKrD,UAChBuD,IAAKF,EAAK1D,GACVA,GAAI0D,EAAK1D,GACT0D,KAAMA,EACN/B,oBAAqBA,0BCWhBkC,6MAvCbjD,MAAQ,CACNR,UAAW,GACXJ,GAAI,MAGN8D,YAAc,SAACC,GACK,UAAdA,EAAMH,KACJ7C,EAAKH,MAAMR,UAAU4D,SACvBjD,EAAKC,MAAMiD,QAAQ,CACjB7D,UAAWW,EAAKH,MAAMR,UACtBJ,GAAIkE,IAAQC,WACZ9D,WAAW,IAEbU,EAAKG,SAAS,CAAEd,UAAW,+EAKxB,IAAAwB,EAAAC,KACCzB,EAAcyB,KAAKjB,MAAnBR,UAER,OACE8B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,mBAEAF,EAAAC,EAAAC,cAAA,SACEf,MAAOjB,EACPiC,UAAU,WACV+B,YAAY,yBACZ3B,SAAU,SAAAsB,GAAK,OAAInC,EAAKV,SAAS,CAAEd,UAAW2D,EAAMpB,OAAOtB,SAC3DgD,UAAWxC,KAAKiC,sBA/BPd,IAAMC,WCyEVqB,6MAzEb1D,MAAQ,CACN2D,OAAQ,KAGVC,WAAa,WACXzD,EAAKC,MAAMyD,kBAAkB1D,EAAKH,MAAM2D,iFAGjC,IAAA3C,EAAAC,KACC0C,EAAW1C,KAAKjB,MAAhB2D,OADD7C,EAOHG,KAAKb,MAJP0D,EAHKhD,EAGLgD,eACApB,EAJK5B,EAIL4B,cACAqB,EALKjD,EAKLiD,iBACAC,EANKlD,EAMLkD,eAGF,OACE1C,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASkB,MAAO,CAAEC,QAASF,IAC3CpB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACbqC,KAGHxC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WACZH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEC,UAAsB,IAAXkC,EAAe,WAAa,GACvCM,KAAK,KACL/B,QAASjB,KAAK2C,WACdM,QAAS,kBAAMlD,EAAKV,SAAS,CAAEqD,OAAQ,MAJzC,QAUFrC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEC,UAAsB,IAAXkC,EAAe,WAAa,GACvCM,KAAK,WACL/B,QAASjB,KAAK2C,WACdM,QAAS,kBAAMlD,EAAKV,SAAS,CAAEqD,OAAQ,MAJzC,WAUFrC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEC,UAAsB,IAAXkC,EAAe,WAAa,GACvCM,KAAK,cACL/B,QAASjB,KAAK2C,WACdM,QAAS,kBAAMlD,EAAKV,SAAS,CAAEqD,OAAQ,MAJzC,eAWJrC,EAAAC,EAAAC,cAAA,UACEE,KAAK,SACLD,UAAU,kBACVkB,MAAO,CAAEC,QAAS,SAClBV,QAAS8B,GAERD,KAAsB,2BAjEX3B,IAAMC,kkBCqJb8B,6MAlJbnE,MAAQ,CACNuC,MAAO,GACP6B,aAAc,EACdT,OAAQ,KAGVN,QAAU,SAACgB,GACTlE,EAAKG,SAAS,SAAAE,GAAA,IAAG+B,EAAH/B,EAAG+B,MAAH,MAAgB,CAC5BA,MAAK,GAAA+B,OAAAC,OAAAC,EAAA,EAAAD,CACAhC,GADA,CAEH8B,UAKNlD,YAAc,SAAC/B,GACbe,EAAKG,SAAS,SAAAmE,GAAA,MAAgB,CAC5BlC,MADYkC,EAAGlC,MACFmC,OAAO,SAAA5B,GAAI,OAAIA,EAAK1D,KAAOA,UAI5CgC,aAAe,SAAChC,GACde,EAAKG,SAAS,SAAAqE,GAAA,MAAgB,CAC5BpC,MADYoC,EAAGpC,MACFM,IAAI,SAAAC,GAAI,OACnBA,EAAK1D,KAAOA,EACR0D,EADJ8B,EAAA,GAGO9B,EAHP,CAIIrD,WAAYqD,EAAKrD,oBAM3B+C,gBAAkB,WAChBrC,EAAKG,SAAS,SAAAuE,GAAA,IAAGtC,EAAHsC,EAAGtC,MAAH,OACK,IADLsC,EAAUT,aAElB,CACA7B,MAAOA,EAAMM,IAAI,SAAAC,GAAI,OAAA8B,EAAA,GAEd9B,EAFc,CAGjBrD,WAAW,MAGf2E,aAAc,GAEd,CACA7B,MAAOA,EAAMM,IAAI,SAAAC,GAAI,OAAA8B,EAAA,GAEd9B,EAFc,CAGjBrD,WAAW,MAGf2E,aAAc,QAKtBN,eAAiB,WACf,IAAMgB,EAAQ3E,EAAKH,MAAMuC,MACtBmC,OAAO,SAAA5B,GAAI,OAAKA,EAAKrD,YAExB,QAAOqF,EAAMC,QAAN,GAAAT,OACAQ,EAAMC,OADN,kBAKThB,iBAAmB,WAAM,IACfxB,EAAUpC,EAAKH,MAAfuC,MAER,OAAOyC,QAAQzC,EAAMmC,OAAO,SAAA5B,GAAI,OAAuB,IAAnBA,EAAKrD,YAAoBsF,WAG/Df,eAAiB,WACf7D,EAAKG,SAAS,SAAA2E,GAAA,MAAgB,CAC5B1C,MADY0C,EAAG1C,MAEZmC,OAAO,SAAA5B,GAAI,OAAKA,EAAKrD,YACxBkE,OAAQ,QAIZ5C,oBAAsB,SAAC3B,EAAIU,GACrBA,EACFK,EAAKG,SAAS,SAAA4E,GAAA,MAAgB,CAC5B3C,MADY2C,EAAG3C,MACFM,IAAI,SAAAC,GAAI,OAAKA,EAAK1D,KAAOA,EAAZwF,EAAA,GACjB9B,EADiB,CACXtD,UAAWM,IACtBgD,OAGN3C,EAAKgB,YAAY/B,MAIrByE,kBAAoB,SAACF,GACnBxD,EAAKG,SAAS,CACZqD,cAIJwB,YAAc,SAAC5C,EAAOoB,GACpB,OAAQA,GACN,KAAK,EACH,OAAOpB,EAAMmC,OAAO,SAAA5B,GAAI,OAAKA,EAAKrD,YACpC,KAAK,EACH,OAAO8C,EAAMmC,OAAO,SAAA5B,GAAI,OAAIA,EAAKrD,YACnC,QACE,OAAO8E,OAAAC,EAAA,EAAAD,CAAIhC,6EAIR,IAAAlB,EACmBJ,KAAKjB,MAAvBuC,EADDlB,EACCkB,MAAOoB,EADRtC,EACQsC,OACTyB,EAAgBnE,KAAKkE,YAAY5C,EAAOoB,GAE9C0B,aAAaC,QAAQ,QAASC,KAAKC,UAAUjD,IAC7C,IAEIG,EAAgB,GAMpB,OAHIA,EADY,OAJI2C,aAAaI,QAAQ,SAKrB,QACA,OAGlBnE,EAAAC,EAAAC,cAAA,WAASC,UAAU,WACjBH,EAAAC,EAAAC,cAACkE,EAAD,CAAMrC,QAASpC,KAAKoC,UACpB/B,EAAAC,EAAAC,cAACmE,EAAD,CACEjD,cAAeA,EACf3B,oBAAqBE,KAAKF,oBAC1ByB,gBAAiBvB,KAAKuB,gBACtBpB,aAAcH,KAAKG,aACnBD,YAAaF,KAAKE,YAClBoB,MAAO6C,IAET9D,EAAAC,EAAAC,cAACoE,EAAD,CACE/B,kBAAmB5C,KAAK4C,kBACxBnB,cAAeA,EACfsB,eAAgB/C,KAAK+C,eACrBD,iBAAkB9C,KAAK8C,iBACvBD,eAAgB7C,KAAK6C,yBA5Ib1B,IAAMC,WCAxBwD,IAASC,OACPxE,EAAAC,EAAAC,cAACuE,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.4c576bf6.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst TodoShape = {\n  id: PropTypes.string.isRequired,\n  todoTitle: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n};\n\nexport const TodoItemTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.string,\n    completed: PropTypes.bool,\n  })),\n  destroyTodo: PropTypes.func.isRequired,\n  changeStatus: PropTypes.func.isRequired,\n  handleTodoTitleEdit: PropTypes.func.isRequired,\n};\n\nexport const TodoListTypes = {\n  todoList: PropTypes.arrayOf(PropTypes.shape(TodoShape)),\n  destroyTodo: PropTypes.func.isRequired,\n  changeStatus: PropTypes.func.isRequired,\n  changeStatusAll: PropTypes.func.isRequired,\n  handleTodoTitleEdit: PropTypes.func.isRequired,\n};\n\nexport const TodoFormTypes = {\n  AddTodo: PropTypes.func.isRequired,\n};\n\nexport const TodoFiltersTypes = {\n  completedTodosSorting: PropTypes.func,\n  completedAppears: PropTypes.func,\n  allTodosToShowSorting: PropTypes.func,\n  nonCompletedCount: PropTypes.func,\n  nonCompletedTodosSorting: PropTypes.func,\n};\n","import React from 'react';\n\nimport { TodoItemTypes } from '../PropTypes/PropTypes';\n\nclass TodoItem extends React.Component {\n  state = {\n    isEditing: false,\n    titleToEdit: this.props.title,\n  };\n\n  handleDoubClick = () => this.setState({ isEditing: true });\n\n  handleTitleChange = ({ value }) => {\n    this.setState({ titleToEdit: value });\n  };\n\n  handleTitleChangeEnd = () => this.setState({ isEditing: false });\n\n  handleTitleSubmit = (e) => {\n    e.preventDefault();\n    const { handleTodoTitleEdit, id } = this.props;\n\n    handleTodoTitleEdit(id, this.state.titleToEdit);\n    this.setState({ isEditing: false });\n  };\n\n  render() {\n    const {\n      id,\n      title,\n      completed,\n      destroyTodo,\n      changeStatus,\n    } = this.props;\n\n    const { isEditing, titleToEdit } = this.state;\n\n    return (\n      <li className={completed ? 'completed' : ''}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            name={id}\n            id={id}\n            checked={completed}\n            onChange={() => changeStatus(id)}\n          />\n          {isEditing\n            ? (\n              <form\n                className=\"todo-item__form\"\n                onSubmit={e => this.handleTitleSubmit(e)}\n              >\n                <input\n                  className=\"todo-item__input\"\n                  type=\"text\"\n                  value={titleToEdit}\n                  onChange={e => this.handleTitleChange(e.target)}\n                  onBlur={this.handleTitleChangeEnd}\n                />\n              </form>\n            )\n            : (\n              <label\n                htmlFor={id}\n                onClick={e => e.preventDefault()}\n                onDoubleClick={this.handleDoubClick}\n              >\n                {title}\n              </label>\n            )}\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => destroyTodo(id)}\n          />\n        </div>\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = TodoItemTypes;\n\nexport default TodoItem;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\n\nimport TodoItem from '../TodoItem/TodoItem';\nimport { TodoListTypes } from '../PropTypes/PropTypes';\n\nconst TodoList = ({\n  todos,\n  destroyTodo,\n  changeStatus,\n  changeStatusAll,\n  handleEdit,\n  handleTodoTitleEdit,\n  footerDisplay,\n}) => (\n  <section className=\"main\" style={{ display: footerDisplay }}>\n    <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n    <label\n      onClick={changeStatusAll}\n      htmlFor=\"toggle-all\"\n      style={{ display: 'block' }}\n    >\n      Mark all as complete\n    </label>\n    <ul className=\"todo-list\">\n      { todos.map(todo => (\n        <TodoItem\n          changeStatus={changeStatus}\n          destroyTodo={destroyTodo}\n          title={todo.todoTitle}\n          completed={todo.completed}\n          key={todo.id}\n          id={todo.id}\n          todo={todo}\n          handleTodoTitleEdit={handleTodoTitleEdit}\n        />\n      ))}\n    </ul>\n  </section>\n);\n\nTodoList.propTypes = TodoListTypes;\n\nexport default TodoList;\n","import React from 'react';\n\nimport shortid from 'shortid';\nimport { TodoFormTypes } from '../PropTypes/PropTypes';\n\nclass Form extends React.Component {\n  state = {\n    todoTitle: '',\n    id: '', // eslint-disable-line\n  }\n\n  onEnterDown = (event) => {\n    if (event.key === 'Enter') {\n      if (this.state.todoTitle.trim()) {\n        this.props.AddTodo({\n          todoTitle: this.state.todoTitle,\n          id: shortid.generate(),\n          completed: false,\n        });\n        this.setState({ todoTitle: '' });\n      }\n    }\n  }\n\n  render() {\n    const { todoTitle } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <input\n          value={todoTitle}\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={event => this.setState({ todoTitle: event.target.value })}\n          onKeyDown={this.onEnterDown}\n        />\n      </header>\n    );\n  }\n}\n\nForm.propTypes = TodoFormTypes;\n\nexport default Form;\n","import React from 'react';\n\nimport { TodoFiltersTypes } from '../PropTypes/PropTypes';\n\nclass Filters extends React.Component {\n  state = {\n    active: 1,\n  }\n\n  stateProps = () => {\n    this.props.handleFieldChange(this.state.active);\n  }\n\n  render() {\n    const { active } = this.state;\n    const {\n      activeProblems,\n      footerDisplay,\n      completedAppears,\n      clearCompleted,\n    } = this.props;\n\n    return (\n      <footer className=\"footer\" style={{ display: footerDisplay }}>\n        <span className=\"todo-count\">\n          {activeProblems()}\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <a\n              className={active === 1 ? 'selected' : ''}\n              href=\"#/\"\n              onClick={this.stateProps}\n              onFocus={() => this.setState({ active: 1 })}\n            >\n              All\n            </a>\n          </li>\n\n          <li>\n            <a\n              className={active === 2 ? 'selected' : ''}\n              href=\"#/active\"\n              onClick={this.stateProps}\n              onFocus={() => this.setState({ active: 2 })}\n            >\n              Active\n            </a>\n          </li>\n\n          <li>\n            <a\n              className={active === 3 ? 'selected' : ''}\n              href=\"#/completed\"\n              onClick={this.stateProps}\n              onFocus={() => this.setState({ active: 3 })}\n            >\n              Completed\n            </a>\n          </li>\n        </ul>\n\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          style={{ display: 'block' }}\n          onClick={clearCompleted}\n        >\n          {completedAppears() && 'Clear completed' }\n        </button>\n      </footer>\n    );\n  }\n}\n\nFilters.propTypes = TodoFiltersTypes;\n\nexport default Filters;\n","import React from 'react';\n\nimport TodoList from './components/TodoList/TodoList';\nimport Form from './components/Form/Form';\nimport Filters from './components/Filters/Filters';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    completedAll: 0, // eslint-disable-line\n    active: 1,\n  }\n\n  AddTodo = (inputFormValue) => {\n    this.setState(({ todos }) => ({\n      todos: [\n        ...todos,\n        inputFormValue,\n      ],\n    }));\n  }\n\n  destroyTodo = (id) => {\n    this.setState(({ todos }) => ({\n      todos: todos.filter(todo => todo.id !== id),\n    }));\n  }\n\n  changeStatus = (id) => {\n    this.setState(({ todos }) => ({\n      todos: todos.map(todo => (\n        todo.id !== id\n          ? todo\n          : {\n            ...todo,\n            completed: !todo.completed,\n          }\n      )),\n    }));\n  }\n\n  changeStatusAll = () => {\n    this.setState(({ todos, completedAll }) => (\n      completedAll === 0\n        ? {\n          todos: todos.map(todo => (\n            {\n              ...todo,\n              completed: true,\n            }\n          )),\n          completedAll: 1,\n        }\n        : {\n          todos: todos.map(todo => (\n            {\n              ...todo,\n              completed: false,\n            }\n          )),\n          completedAll: 0,\n        }\n    ));\n  }\n\n  activeProblems = () => {\n    const count = this.state.todos\n      .filter(todo => !todo.completed);\n\n    return count.length\n      ? `${count.length} todos left`\n      : false;\n  }\n\n  completedAppears = () => {\n    const { todos } = this.state;\n\n    return Boolean(todos.filter(todo => todo.completed === true).length);\n  }\n\n  clearCompleted = () => {\n    this.setState(({ todos }) => ({\n      todos: todos\n        .filter(todo => !todo.completed),\n      active: 2,\n    }));\n  }\n\n  handleTodoTitleEdit = (id, title) => {\n    if (title) {\n      this.setState(({ todos }) => ({\n        todos: todos.map(todo => (todo.id === id\n          ? { ...todo, todoTitle: title }\n          : todo)),\n      }));\n    } else {\n      this.destroyTodo(id);\n    }\n  };\n\n  handleFieldChange = (active) => {\n    this.setState({\n      active,\n    });\n  }\n\n  filterTodos = (todos, active) => {\n    switch (active) {\n      case 2:\n        return todos.filter(todo => !todo.completed);\n      case 3:\n        return todos.filter(todo => todo.completed);\n      default:\n        return [...todos];\n    }\n  }\n\n  render() {\n    const { todos, active } = this.state;\n    const filteredTodos = this.filterTodos(todos, active);\n\n    localStorage.setItem('todos', JSON.stringify(todos));\n    const listOfTodos = localStorage.getItem('todos');\n\n    let footerDisplay = '';\n\n    listOfTodos !== '[]'\n      ? footerDisplay = 'block'\n      : footerDisplay = 'none';\n\n    return (\n      <section className=\"todoapp\">\n        <Form AddTodo={this.AddTodo} />\n        <TodoList\n          footerDisplay={footerDisplay}\n          handleTodoTitleEdit={this.handleTodoTitleEdit}\n          changeStatusAll={this.changeStatusAll}\n          changeStatus={this.changeStatus}\n          destroyTodo={this.destroyTodo}\n          todos={filteredTodos}\n        />\n        <Filters\n          handleFieldChange={this.handleFieldChange}\n          footerDisplay={footerDisplay}\n          clearCompleted={this.clearCompleted}\n          completedAppears={this.completedAppears}\n          activeProblems={this.activeProblems}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}