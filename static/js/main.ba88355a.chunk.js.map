{"version":3,"sources":["components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/Form/Form.js","components/Filters/Filters.js","App.js","index.js"],"names":["TodoItem","state","isEditing","titleToEdit","_this","props","title","handleDoubClick","setState","handleTitleChange","_ref","value","handleTitleChangeEnd","handleTitleSubmit","e","preventDefault","handleTodoTitleEdit","id","_this2","this","_this$props","completed","destroyTodo","changeStatus","react_default","a","createElement","className","type","name","checked","onChange","onSubmit","target","onBlur","htmlFor","onClick","onDoubleClick","React","Component","TodoList","todos","changeStatusAll","handleEdit","style","display","map","todo","components_TodoItem_TodoItem","todoTitle","key","Form","onEnterDown","event","AddTodo","shortid","generate","placeholder","onKeyDown","Filters","active","nonCompletedCount","href","allTodosToShowSorting","onFocus","nonCompletedTodosSorting","completedTodosSorting","completedAppears","App","todoList","todoListOriginal","completedAll","inputFormValue","prevState","concat","Object","toConsumableArray","idTodoToDestroy","filter","idTodoToChange","_objectSpread","count","length","onInputChange","localStorage","setItem","JSON","stringify","listOfTodos","getItem","console","log","components_Form_Form","components_TodoList_TodoList","components_Filters_Filters","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ba88355a.chunk.js","sourcesContent":["import React from 'react';\n\nimport './TodoItem.css';\n\nclass TodoItem extends React.Component {\n  state = {\n    isEditing: false,\n    titleToEdit: this.props.title,\n  };\n\n  handleDoubClick = () => this.setState({ isEditing: true });\n\n  handleTitleChange = ({ value }) => {\n    this.setState({ titleToEdit: value });\n  };\n\n  handleTitleChangeEnd = () => this.setState({ isEditing: false });\n\n  handleTitleSubmit = (e) => {\n    e.preventDefault();\n    this.props.handleTodoTitleEdit(this.props.id, this.state.titleToEdit);\n    this.setState({ isEditing: false });\n  };\n\n  render() {\n    const {\n      id,\n      title,\n      completed,\n      destroyTodo,\n      changeStatus,\n    } = this.props;\n\n    return (\n      <li className={completed ? 'completed' : ''}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            name={id}\n            id={id}\n            checked={completed}\n            onChange={() => changeStatus(id)}\n          />\n          {this.state.isEditing\n            ? (\n              <form\n                className=\"todo-item__form\"\n                onSubmit={e => this.handleTitleSubmit(e)}\n              >\n                <input\n                  className=\"todo-item__input\"\n                  type=\"text\"\n                  value={this.state.titleToEdit}\n                  onChange={e => this.handleTitleChange(e.target)}\n                  onBlur={this.handleTitleChangeEnd}\n                />\n              </form>\n            )\n            : (\n              <label\n                htmlFor={id}\n                onClick={e => e.preventDefault()}\n                onDoubleClick={this.handleDoubClick}\n              >\n                {title}\n              </label>\n            )}\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => destroyTodo(id)}\n          />\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default TodoItem;\n","import React from 'react';\n\nimport TodoItem from '../TodoItem/TodoItem';\n\nconst TodoList = ({\n  todos,\n  destroyTodo,\n  changeStatus,\n  changeStatusAll,\n  handleEdit,\n  handleTodoTitleEdit,\n}) => (\n  <section className=\"main\" style={{ display: 'block' }}>\n    <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n    <label\n      onClick={changeStatusAll}\n      htmlFor=\"toggle-all\"\n    >\n      Mark all as complete\n    </label>\n    <ul className=\"todo-list\">\n      { todos.map(todo => (\n        <TodoItem\n          handleEdit={handleEdit}\n          changeStatus={changeStatus}\n          destroyTodo={destroyTodo}\n          title={todo.todoTitle}\n          completed={todo.completed}\n          key={todo.id}\n          id={todo.id}\n          todo={todo}\n          handleTodoTitleEdit={handleTodoTitleEdit}\n        />\n      ))}\n    </ul>\n  </section>\n);\n\nexport default TodoList;\n","import React from 'react';\nimport shortid from 'shortid';\n\nclass Form extends React.Component {\n  state = {\n    todoTitle: '',\n    id: '',\n  }\n\n  onEnterDown = (event) => {\n    if (event.key === 'Enter') {\n      if (this.state.todoTitle) {\n        this.props.AddTodo({\n          todoTitle: this.state.todoTitle,\n          id: shortid.generate(),\n          completed: false,\n        });\n        this.setState({ todoTitle: '' });\n      }\n    }\n  }\n\n  render() {\n    const { todoTitle } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <input\n          value={todoTitle}\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={event => this.setState({ todoTitle: event.target.value })}\n          onKeyDown={this.onEnterDown}\n        />\n      </header>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\n\nclass Filters extends React.Component {\n  state = {\n    active: '',\n  }\n\n  render() {\n    const { active } = this.state;\n\n    return (\n      <footer className=\"footer\" style={{ display: 'block' }}>\n        <span className=\"todo-count\">\n          {this.props.nonCompletedCount()}\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <a\n              className={active === 1 ? 'selected' : ''}\n              href=\"#/\"\n              onClick={this.props.allTodosToShowSorting}\n              onFocus={() => this.setState({ active: 1 })}\n            >\n              All\n            </a>\n          </li>\n\n          <li>\n            <a\n              className={active === 2 ? 'selected' : ''}\n              href=\"#/active\"\n              onClick={this.props.nonCompletedTodosSorting}\n              onFocus={() => this.setState({ active: 2 })}\n            >\n              Active\n            </a>\n          </li>\n\n          <li>\n            <a\n              className={active === 3 ? 'selected' : ''}\n              href=\"#/completed\"\n              onClick={this.props.completedTodosSorting}\n              onFocus={() => this.setState({ active: 3 })}\n            >\n              Completed\n            </a>\n          </li>\n        </ul>\n\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          style={{ display: 'block' }}\n          onClick={this.props.nonCompletedCount}\n        >\n          {this.props.completedAppears() && 'Clear completed' }\n        </button>\n      </footer>\n    );\n  }\n}\n\nexport default Filters;\n","import React from 'react';\n\nimport TodoList from './components/TodoList/TodoList';\nimport Form from './components/Form/Form';\nimport Filters from './components/Filters/Filters';\n\nclass App extends React.Component {\n  state = {\n    todoList: [],\n    todoListOriginal: [],\n    completedAll: 0,\n  }\n\n  AddTodo = (inputFormValue) => {\n    this.setState(prevState => ({\n      todoListOriginal: [\n        ...prevState.todoListOriginal,\n        inputFormValue,\n      ],\n      todoList: [\n        ...prevState.todoListOriginal,\n        inputFormValue,\n      ],\n    }));\n  }\n\n  destroyTodo = (idTodoToDestroy) => {\n    this.setState(prevState => ({\n      todoList: prevState.todoList.filter(todo => todo.id !== idTodoToDestroy),\n    }));\n  }\n\n  changeStatus = (idTodoToChange) => {\n    this.setState(prevState => ({\n      todoListOriginal: prevState.todoListOriginal.map(todo => (\n        todo.id !== idTodoToChange\n          ? todo\n          : {\n            ...todo,\n            completed: !todo.completed,\n          }\n      )),\n      todoList: prevState.todoList.map(todo => (\n        todo.id !== idTodoToChange\n          ? todo\n          : {\n            ...todo,\n            completed: !todo.completed,\n          }\n      )),\n    }));\n  }\n\n  changeStatusAll = () => {\n    this.setState(prevState => (\n      prevState.completedAll === 0\n        ? {\n          todoList: prevState.todoList.map(todo => (\n            {\n              ...todo,\n              completed: true,\n            }\n          )),\n          completedAll: 1,\n        }\n        : {\n          todoList: prevState.todoList.map(todo => (\n            {\n              ...todo,\n              completed: false,\n            }\n          )),\n          completedAll: 0,\n        }\n    ));\n  }\n\n  nonCompletedCount = (e) => {\n    const count = this.state.todoList\n      .filter(todo => todo.completed !== true);\n\n    if (e) {\n      this.setState({\n        todoList: count,\n      });\n    }\n\n    if (count.length) {\n      return `${count.length} todos left`;\n    }\n\n    return false;\n  }\n\n  completedAppears = () => {\n    const arr = this.state.todoList\n      .filter(todo => todo.completed === true);\n\n    return !!arr.length;\n  }\n\n  nonCompletedTodosSorting = () => {\n    this.setState(prevState => ({\n      todoList: prevState.todoListOriginal\n        .filter(todo => todo.completed !== true),\n    }));\n  }\n\n  completedTodosSorting = () => {\n    this.setState(prevState => ({\n      todoList: prevState.todoListOriginal\n        .filter(todo => todo.completed === true),\n    }));\n  }\n\n  allTodosToShowSorting = () => {\n    this.setState({\n      todoList: this.state.todoListOriginal,\n    });\n  }\n\n  handleTodoTitleEdit = (id, title) => {\n    if (title) {\n      this.setState(({ todoList }) => ({\n        todoList: todoList.map(todo => (todo.id === id\n          ? { ...todo, todoTitle: title }\n          : todo)),\n      }));\n    } else {\n      this.destroyTodo(id);\n    }\n  };\n\n  onInputChange = (value) => {\n    this.setState({ todoTitle: value });\n  };\n\n  render() {\n    const { todoList } = this.state;\n\n    localStorage.setItem('todoList', JSON.stringify(todoList));\n    const listOfTodos = localStorage.getItem('todoList');\n\n    console.log('listOfTodos=', listOfTodos);\n\n    return (\n      <section className=\"todoapp\">\n        <Form AddTodo={this.AddTodo} />\n        <TodoList\n          handleTodoTitleEdit={this.handleTodoTitleEdit}\n          changeStatusAll={this.changeStatusAll}\n          changeStatus={this.changeStatus}\n          destroyTodo={this.destroyTodo}\n          todos={todoList}\n        />\n        <Filters\n          completedAppears={this.completedAppears}\n          allTodosToShowSorting={this.allTodosToShowSorting}\n          nonCompletedCount={this.nonCompletedCount}\n          nonCompletedTodosSorting={this.nonCompletedTodosSorting}\n          completedTodosSorting={this.completedTodosSorting}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}