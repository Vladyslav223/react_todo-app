{"version":3,"sources":["components/PropTypes/PropTypes.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/Form/Form.js","components/Filters/Filters.js","App.js","index.js"],"names":["TodoShape","id","PropTypes","string","isRequired","todoTitle","completed","bool","TodoItem","object","func","arrayOf","objectOf","state","isEditing","titleToEdit","_this","props","title","handleDoubClick","setState","handleTitleChange","_ref","value","handleTitleChangeEnd","handleTitleSubmit","e","preventDefault","handleTodoTitleEdit","_this2","this","_this$props","destroyTodo","changeStatus","react_default","a","createElement","className","type","name","checked","onChange","onSubmit","target","onBlur","htmlFor","onClick","onDoubleClick","React","Component","TodoList","todos","changeStatusAll","handleEdit","footerDisplay","style","display","map","todo","components_TodoItem_TodoItem","key","Form","onEnterDown","event","AddTodo","shortid","generate","placeholder","onKeyDown","Filters","active","nonCompletedCount","href","allTodosToShowSorting","onFocus","nonCompletedTodosSorting","completedTodosSorting","clearCompleted","completedAppears","App","todoList","todoListOriginal","completedAll","inputFormValue","prevState","concat","Object","toConsumableArray","idTodoToDestroy","filter","idTodoToChange","_objectSpread","count","length","onInputChange","_this$state","localStorage","setItem","JSON","stringify","getItem","components_Form_Form","components_TodoList_TodoList","components_Filters_Filters","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.14265b8c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst TodoShape = {\n  id: PropTypes.string.isRequired,\n  todoTitle: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n};\n\nexport const TodoItemTypes = {\n  todo: PropTypes.object.isRequired,\n  destroyTodo: PropTypes.func.isRequired,\n  changeStatus: PropTypes.func.isRequired,\n  handleTodoTitleEdit: PropTypes.func.isRequired,\n};\n\nexport const TodoListTypes = {\n  todoList: PropTypes.arrayOf(PropTypes.objectOf(TodoShape)),\n  destroyTodo: PropTypes.func.isRequired,\n  changeStatus: PropTypes.func.isRequired,\n  changeStatusAll: PropTypes.func.isRequired,\n  handleTodoTitleEdit: PropTypes.func.isRequired,\n};\n\nexport const TodoFormTypes = {\n  AddTodo: PropTypes.func.isRequired,\n};\n\nexport const TodoFiltersTypes = {\n  completedTodosSorting: PropTypes.func,\n  completedAppears: PropTypes.func,\n  allTodosToShowSorting: PropTypes.func,\n  nonCompletedCount: PropTypes.func,\n  nonCompletedTodosSorting: PropTypes.func,\n};\n","import React from 'react';\n\nimport './TodoItem.css';\nimport { TodoItemTypes } from '../PropTypes/PropTypes';\n\nclass TodoItem extends React.Component {\n  state = {\n    isEditing: false,\n    titleToEdit: this.props.title,\n  };\n\n  handleDoubClick = () => this.setState({ isEditing: true });\n\n  handleTitleChange = ({ value }) => {\n    this.setState({ titleToEdit: value });\n  };\n\n  handleTitleChangeEnd = () => this.setState({ isEditing: false });\n\n  handleTitleSubmit = (e) => {\n    e.preventDefault();\n    this.props.handleTodoTitleEdit(this.props.id, this.state.titleToEdit);\n    this.setState({ isEditing: false });\n  };\n\n  render() {\n    const {\n      id,\n      title,\n      completed,\n      destroyTodo,\n      changeStatus,\n    } = this.props;\n\n    return (\n      <li className={completed ? 'completed' : ''}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            name={id}\n            id={id}\n            checked={completed}\n            onChange={() => changeStatus(id)}\n          />\n          {this.state.isEditing\n            ? (\n              <form\n                className=\"todo-item__form\"\n                onSubmit={e => this.handleTitleSubmit(e)}\n              >\n                <input\n                  className=\"todo-item__input\"\n                  type=\"text\"\n                  value={this.state.titleToEdit}\n                  onChange={e => this.handleTitleChange(e.target)}\n                  onBlur={this.handleTitleChangeEnd}\n                />\n              </form>\n            )\n            : (\n              <label\n                htmlFor={id}\n                onClick={e => e.preventDefault()}\n                onDoubleClick={this.handleDoubClick}\n              >\n                {title}\n              </label>\n            )}\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => destroyTodo(id)}\n          />\n        </div>\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = TodoItemTypes;\n\nexport default TodoItem;\n","import React from 'react';\n\nimport TodoItem from '../TodoItem/TodoItem';\nimport { TodoListTypes } from '../PropTypes/PropTypes';\n/* eslint-disable */\nconst TodoList = ({\n  todos,\n  destroyTodo,\n  changeStatus,\n  changeStatusAll,\n  handleEdit,\n  handleTodoTitleEdit,\n  footerDisplay\n}) => (\n  <section className=\"main\" style={{ display: footerDisplay }}>\n    <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n    <label\n      onClick={changeStatusAll}\n      htmlFor=\"toggle-all\"\n      style={{ display: 'block' }}\n    >\n      Mark all as complete\n    </label>\n    <ul className=\"todo-list\">\n      { todos.map(todo => (\n        <TodoItem\n          changeStatus={changeStatus}\n          destroyTodo={destroyTodo}\n          title={todo.todoTitle}\n          completed={todo.completed}\n          key={todo.id}\n          id={todo.id}\n          todo={todo}\n          handleTodoTitleEdit={handleTodoTitleEdit}\n        />\n      ))}\n    </ul>\n  </section>\n);\n/* eslint-enable */\n\nTodoList.propTypes = TodoListTypes;\n\nexport default TodoList;\n","import React from 'react';\n\nimport shortid from 'shortid';\nimport { TodoFormTypes } from '../PropTypes/PropTypes';\n\nclass Form extends React.Component {\n  state = {\n    todoTitle: '',\n    id: '', // eslint-disable-line\n  }\n\n  onEnterDown = (event) => {\n    if (event.key === 'Enter') {\n      if (this.state.todoTitle) {\n        this.props.AddTodo({\n          todoTitle: this.state.todoTitle,\n          id: shortid.generate(),\n          completed: false,\n        });\n        this.setState({ todoTitle: '' });\n      }\n    }\n  }\n\n  render() {\n    const { todoTitle } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <input\n          value={todoTitle}\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={event => this.setState({ todoTitle: event.target.value })}\n          onKeyDown={this.onEnterDown}\n        />\n      </header>\n    );\n  }\n}\n\nForm.propTypes = TodoFormTypes;\n\nexport default Form;\n","import React from 'react';\n\nimport { TodoFiltersTypes } from '../PropTypes/PropTypes';\n\nclass Filters extends React.Component {\n  state = {\n    active: '',\n  }\n\n  render() {\n    const { active } = this.state;\n    const { nonCompletedCount } = this.props;\n\n    return (\n      <footer className=\"footer\" style={{ display: this.props.footerDisplay }}>\n        <span className=\"todo-count\">\n          {nonCompletedCount()}\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <a\n              className={active === 1 ? 'selected' : ''}\n              href=\"#/\"\n              onClick={this.props.allTodosToShowSorting}\n              onFocus={() => this.setState({ active: 1 })}\n            >\n              All\n            </a>\n          </li>\n\n          <li>\n            <a\n              className={active === 2 ? 'selected' : ''}\n              href=\"#/active\"\n              onClick={this.props.nonCompletedTodosSorting}\n              onFocus={() => this.setState({ active: 2 })}\n            >\n              Active\n            </a>\n          </li>\n\n          <li>\n            <a\n              className={active === 3 ? 'selected' : ''}\n              href=\"#/completed\"\n              onClick={this.props.completedTodosSorting}\n              onFocus={() => this.setState({ active: 3 })}\n            >\n              Completed\n            </a>\n          </li>\n        </ul>\n\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          style={{ display: 'block' }}\n          onClick={this.props.clearCompleted}\n        >\n          {this.props.completedAppears() && 'Clear completed' }\n        </button>\n      </footer>\n    );\n  }\n}\n\nFilters.propTypes = TodoFiltersTypes;\n\nexport default Filters;\n","import React from 'react';\n\nimport TodoList from './components/TodoList/TodoList';\nimport Form from './components/Form/Form';\nimport Filters from './components/Filters/Filters';\n// import './base.css';\n// import './index.css';\n\nclass App extends React.Component {\n  state = {\n    todoList: [],\n    todoListOriginal: [],\n    completedAll: 0, // eslint-disable-line\n  }\n\n  AddTodo = (inputFormValue) => {\n    this.setState(prevState => ({\n      todoListOriginal: [\n        ...prevState.todoListOriginal,\n        inputFormValue,\n      ],\n      todoList: [\n        ...prevState.todoListOriginal,\n        inputFormValue,\n      ],\n    }));\n  }\n\n  destroyTodo = (idTodoToDestroy) => {\n    this.setState(prevState => ({\n      todoList: prevState.todoList\n        .filter(todo => todo.id !== idTodoToDestroy),\n      todoListOriginal: prevState.todoList\n        .filter(todo => todo.id !== idTodoToDestroy),\n    }));\n  }\n\n  changeStatus = (idTodoToChange) => {\n    this.setState(prevState => ({\n      todoListOriginal: prevState.todoListOriginal.map(todo => (\n        todo.id !== idTodoToChange\n          ? todo\n          : {\n            ...todo,\n            completed: !todo.completed,\n          }\n      )),\n      todoList: prevState.todoList.map(todo => (\n        todo.id !== idTodoToChange\n          ? todo\n          : {\n            ...todo,\n            completed: !todo.completed,\n          }\n      )),\n    }));\n  }\n\n  changeStatusAll = () => {\n    this.setState(prevState => (\n      prevState.completedAll === 0\n        ? {\n          todoList: prevState.todoList.map(todo => (\n            {\n              ...todo,\n              completed: true,\n            }\n          )),\n          completedAll: 1,\n        }\n        : {\n          todoList: prevState.todoList.map(todo => (\n            {\n              ...todo,\n              completed: false,\n            }\n          )),\n          completedAll: 0,\n        }\n    ));\n  }\n\n  nonCompletedCount = (e) => {\n    const count = this.state.todoListOriginal\n      .filter(todo => todo.completed !== true);\n\n    if (e) {\n      this.setState({\n        todoList: count,\n      });\n    }\n\n    if (count.length) {\n      return `${count.length} todos left`;\n    }\n\n    return false;\n  }\n\n  completedAppears = () => {\n    const arr = this.state.todoListOriginal\n      .filter(todo => todo.completed === true);\n\n    return !!arr.length;\n  }\n\n  nonCompletedTodosSorting = () => {\n    this.setState(prevState => ({\n      todoList: prevState.todoListOriginal\n        .filter(todo => todo.completed !== true),\n    }));\n  }\n\n  clearCompleted = () => {\n    this.setState(prevState => ({\n      todoList: prevState.todoListOriginal\n        .filter(todo => todo.completed !== true),\n      todoListOriginal: prevState.todoListOriginal\n        .filter(todo => todo.completed !== true),\n    }));\n  }\n\n  completedTodosSorting = () => {\n    this.setState(prevState => ({\n      todoList: prevState.todoListOriginal\n        .filter(todo => todo.completed === true),\n    }));\n  }\n\n  allTodosToShowSorting = () => {\n    this.setState({\n      todoList: this.state.todoListOriginal, // eslint-disable-line\n    });\n  }\n\n  handleTodoTitleEdit = (id, title) => {\n    if (title) {\n      this.setState(({ todoList }) => ({\n        todoList: todoList.map(todo => (todo.id === id\n          ? { ...todo, todoTitle: title }\n          : todo)),\n      }));\n    } else {\n      this.destroyTodo(id);\n    }\n  };\n\n  onInputChange = (value) => {\n    this.setState({ todoTitle: value }); // eslint-disable-line\n  };\n\n  render() {\n    const { todoList, todoListOriginal } = this.state;\n\n    localStorage.setItem('todoListOriginal', JSON.stringify(todoListOriginal));\n    const listOfTodos = localStorage.getItem('todoListOriginal');\n    /* eslint-disable */\n    let footerDisplay = '';\n    listOfTodos !== \"[]\"\n    ? footerDisplay = 'block'\n    : footerDisplay = 'none';\n    /* eslint-enable */\n\n    return (\n      <section className=\"todoapp\">\n        <Form AddTodo={this.AddTodo} />\n        <TodoList\n          footerDisplay={footerDisplay}\n          handleTodoTitleEdit={this.handleTodoTitleEdit}\n          changeStatusAll={this.changeStatusAll}\n          changeStatus={this.changeStatus}\n          destroyTodo={this.destroyTodo}\n          todos={todoList}\n        />\n        <Filters\n          footerDisplay={footerDisplay}\n          clearCompleted={this.clearCompleted}\n          completedAppears={this.completedAppears}\n          allTodosToShowSorting={this.allTodosToShowSorting}\n          nonCompletedCount={this.nonCompletedCount}\n          nonCompletedTodosSorting={this.nonCompletedTodosSorting}\n          completedTodosSorting={this.completedTodosSorting}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}