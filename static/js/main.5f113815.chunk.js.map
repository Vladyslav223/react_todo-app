{"version":3,"sources":["components/PropTypes/PropTypes.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/Form/Form.js","components/Filters/Filters.js","App.js","index.js"],"names":["TodoShape","id","PropTypes","string","isRequired","todoTitle","completed","bool","TodoItem","object","func","arrayOf","objectOf","state","isEditing","titleToEdit","_this","props","title","handleDoubClick","setState","handleTitleChange","_ref","value","handleTitleChangeEnd","handleTitleSubmit","e","preventDefault","handleTodoTitleEdit","_this2","this","_this$props","destroyTodo","changeStatus","react_default","a","createElement","className","type","name","checked","onChange","onSubmit","target","onBlur","htmlFor","onClick","onDoubleClick","React","Component","TodoList","todos","changeStatusAll","handleEdit","footerDisplay","style","display","map","todo","components_TodoItem_TodoItem","key","Form","onEnterDown","event","trim","AddTodo","shortid","generate","placeholder","onKeyDown","Filters","active","stateProps","handleFieldChange","nonCompletedCount","completedAppears","clearCompleted","href","onFocus","App","completedAll","inputFormValue","concat","Object","toConsumableArray","idTodoToDestroy","_ref2","filter","_ref3","_objectSpread","_ref4","count","length","Boolean","_ref5","_ref6","filterTodos","_this$state","filteredTodos","localStorage","setItem","JSON","stringify","getItem","components_Form_Form","components_TodoList_TodoList","components_Filters_Filters","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5f113815.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst TodoShape = {\n  id: PropTypes.string.isRequired,\n  todoTitle: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n};\n\nexport const TodoItemTypes = {\n  todo: PropTypes.object.isRequired,\n  destroyTodo: PropTypes.func.isRequired,\n  changeStatus: PropTypes.func.isRequired,\n  handleTodoTitleEdit: PropTypes.func.isRequired,\n};\n\nexport const TodoListTypes = {\n  todoList: PropTypes.arrayOf(PropTypes.objectOf(TodoShape)),\n  destroyTodo: PropTypes.func.isRequired,\n  changeStatus: PropTypes.func.isRequired,\n  changeStatusAll: PropTypes.func.isRequired,\n  handleTodoTitleEdit: PropTypes.func.isRequired,\n};\n\nexport const TodoFormTypes = {\n  AddTodo: PropTypes.func.isRequired,\n};\n\nexport const TodoFiltersTypes = {\n  completedTodosSorting: PropTypes.func,\n  completedAppears: PropTypes.func,\n  allTodosToShowSorting: PropTypes.func,\n  nonCompletedCount: PropTypes.func,\n  nonCompletedTodosSorting: PropTypes.func,\n};\n","import React from 'react';\n\nimport './TodoItem.css';\nimport { TodoItemTypes } from '../PropTypes/PropTypes';\n\nclass TodoItem extends React.Component {\n  state = {\n    isEditing: false,\n    titleToEdit: this.props.title,\n  };\n\n  handleDoubClick = () => this.setState({ isEditing: true });\n\n  handleTitleChange = ({ value }) => {\n    this.setState({ titleToEdit: value });\n  };\n\n  handleTitleChangeEnd = () => this.setState({ isEditing: false });\n\n  handleTitleSubmit = (e) => {\n    e.preventDefault();\n    this.props.handleTodoTitleEdit(this.props.id, this.state.titleToEdit);\n    this.setState({ isEditing: false });\n  };\n\n  render() {\n    const {\n      id,\n      title,\n      completed,\n      destroyTodo,\n      changeStatus,\n    } = this.props;\n\n    return (\n      <li className={completed ? 'completed' : ''}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            name={id}\n            id={id}\n            checked={completed}\n            onChange={() => changeStatus(id)}\n          />\n          {this.state.isEditing\n            ? (\n              <form\n                className=\"todo-item__form\"\n                onSubmit={e => this.handleTitleSubmit(e)}\n              >\n                <input\n                  className=\"todo-item__input\"\n                  type=\"text\"\n                  value={this.state.titleToEdit}\n                  onChange={e => this.handleTitleChange(e.target)}\n                  onBlur={this.handleTitleChangeEnd}\n                />\n              </form>\n            )\n            : (\n              <label\n                htmlFor={id}\n                onClick={e => e.preventDefault()}\n                onDoubleClick={this.handleDoubClick}\n              >\n                {title}\n              </label>\n            )}\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => destroyTodo(id)}\n          />\n        </div>\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = TodoItemTypes;\n\nexport default TodoItem;\n","import React from 'react';\n\nimport TodoItem from '../TodoItem/TodoItem';\nimport { TodoListTypes } from '../PropTypes/PropTypes';\n/* eslint-disable */\nconst TodoList = ({\n  todos,\n  destroyTodo,\n  changeStatus,\n  changeStatusAll,\n  handleEdit,\n  handleTodoTitleEdit,\n  footerDisplay\n}) => (\n  <section className=\"main\" style={{ display: footerDisplay }}>\n    <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n    <label\n      onClick={changeStatusAll}\n      htmlFor=\"toggle-all\"\n      style={{ display: 'block' }}\n    >\n      Mark all as complete\n    </label>\n    <ul className=\"todo-list\">\n      { todos.map(todo => (\n        <TodoItem\n          changeStatus={changeStatus}\n          destroyTodo={destroyTodo}\n          title={todo.todoTitle}\n          completed={todo.completed}\n          key={todo.id}\n          id={todo.id}\n          todo={todo}\n          handleTodoTitleEdit={handleTodoTitleEdit}\n        />\n      ))}\n    </ul>\n  </section>\n);\n/* eslint-enable */\n\nTodoList.propTypes = TodoListTypes;\n\nexport default TodoList;\n","import React from 'react';\n\nimport shortid from 'shortid';\nimport { TodoFormTypes } from '../PropTypes/PropTypes';\n\nclass Form extends React.Component {\n  state = {\n    todoTitle: '',\n    id: '', // eslint-disable-line\n  }\n\n  onEnterDown = (event) => {\n    if (event.key === 'Enter') {\n      if (this.state.todoTitle.trim()) {\n        this.props.AddTodo({\n          todoTitle: this.state.todoTitle,\n          id: shortid.generate(),\n          completed: false,\n        });\n        this.setState({ todoTitle: '' });\n      }\n    }\n  }\n\n  render() {\n    const { todoTitle } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <input\n          value={todoTitle}\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={event => this.setState({ todoTitle: event.target.value })}\n          onKeyDown={this.onEnterDown}\n        />\n      </header>\n    );\n  }\n}\n\nForm.propTypes = TodoFormTypes;\n\nexport default Form;\n","import React from 'react';\n\nimport { TodoFiltersTypes } from '../PropTypes/PropTypes';\n\nclass Filters extends React.Component {\n  state = {\n    active: 1,\n  }\n\n  stateProps = () => {\n    this.props.handleFieldChange(this.state.active);\n  }\n\n  render() {\n    const { active } = this.state;\n    const {\n      nonCompletedCount,\n      // handleFieldChange,\n      footerDisplay,\n      completedAppears,\n      clearCompleted,\n    } = this.props;\n\n    return (\n      <footer className=\"footer\" style={{ display: footerDisplay }}>\n        <span className=\"todo-count\">\n          {nonCompletedCount()}\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <a\n              className={active === 1 ? 'selected' : ''}\n              href=\"#/\"\n              onClick={this.stateProps}\n              onFocus={() => this.setState({ active: 1 })}\n            >\n              All\n            </a>\n          </li>\n\n          <li>\n            <a\n              className={active === 2 ? 'selected' : ''}\n              href=\"#/active\"\n              onClick={this.stateProps}\n              onFocus={() => this.setState({ active: 2 })}\n            >\n              Active\n            </a>\n          </li>\n\n          <li>\n            <a\n              className={active === 3 ? 'selected' : ''}\n              href=\"#/completed\"\n              onClick={this.stateProps}\n              onFocus={() => this.setState({ active: 3 })}\n            >\n              Completed\n            </a>\n          </li>\n        </ul>\n\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          style={{ display: 'block' }}\n          onClick={clearCompleted}\n        >\n          {completedAppears() && 'Clear completed' }\n        </button>\n      </footer>\n    );\n  }\n}\n\nFilters.propTypes = TodoFiltersTypes;\n\nexport default Filters;\n","import React from 'react';\n\nimport TodoList from './components/TodoList/TodoList';\nimport Form from './components/Form/Form';\nimport Filters from './components/Filters/Filters';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    completedAll: 0, // eslint-disable-line\n    active: 1,\n  }\n\n  AddTodo = (inputFormValue) => {\n    this.setState(({ todos }) => ({\n      todos: [\n        ...todos,\n        inputFormValue,\n      ],\n    }));\n  }\n\n  destroyTodo = (idTodoToDestroy) => {\n    this.setState(({ todos }) => ({\n      todos: todos\n        .filter(todo => todo.id !== idTodoToDestroy),\n    }));\n  }\n\n  changeStatus = (id) => {\n    this.setState(({ todos }) => ({\n      todos: todos.map(todo => (\n        todo.id !== id\n          ? todo\n          : {\n            ...todo,\n            completed: !todo.completed,\n          }\n      )),\n    }));\n  }\n\n  changeStatusAll = () => {\n    this.setState(({ todos, completedAll }) => (\n      completedAll === 0\n        ? {\n          todos: todos.map(todo => (\n            {\n              ...todo,\n              completed: true,\n            }\n          )),\n          completedAll: 1,\n        }\n        : {\n          todos: todos.map(todo => (\n            {\n              ...todo,\n              completed: false,\n            }\n          )),\n          completedAll: 0,\n        }\n    ));\n  }\n\n  nonCompletedCount = () => {\n    const count = this.state.todos\n      .filter(todo => !todo.completed);\n\n    return count.length\n      ? `${count.length} todos left`\n      : false;\n  }\n\n  completedAppears = () => {\n    const { todos } = this.state;\n\n    return Boolean(todos.filter(todo => todo.completed === true).length);\n  }\n\n  clearCompleted = () => {\n    this.setState(({ todos }) => ({\n      todos: todos\n        .filter(todo => todo.completed !== true),\n      active: 2,\n    }));\n  }\n\n  handleTodoTitleEdit = (id, title) => {\n    if (title) {\n      this.setState(({ todos }) => ({\n        todos: todos.map(todo => (todo.id === id\n          ? { ...todo, todoTitle: title }\n          : todo)),\n      }));\n    } else {\n      this.destroyTodo(id);\n    }\n  };\n\n  handleFieldChange = (active) => {\n    this.setState({\n      active,\n    });\n  }\n\n  filterTodos = (todos, active) => {\n    switch (active) {\n      case 2:\n        return todos.filter(todo => !todo.completed);\n      case 3:\n        return todos.filter(todo => todo.completed);\n      default:\n        return [...todos];\n    }\n  }\n\n  render() {\n    const { todos, active } = this.state;\n    const filteredTodos = this.filterTodos(todos, active);\n\n    localStorage.setItem('todos', JSON.stringify(todos));\n    const listOfTodos = localStorage.getItem('todos');\n    /* eslint-disable */\n    let footerDisplay = '';\n    listOfTodos !== \"[]\"\n    ? footerDisplay = 'block'\n    : footerDisplay = 'none';\n    /* eslint-enable */\n\n    return (\n      <section className=\"todoapp\">\n        <Form AddTodo={this.AddTodo} />\n        <TodoList\n          footerDisplay={footerDisplay}\n          handleTodoTitleEdit={this.handleTodoTitleEdit}\n          changeStatusAll={this.changeStatusAll}\n          changeStatus={this.changeStatus}\n          destroyTodo={this.destroyTodo}\n          todos={filteredTodos}\n        />\n        <Filters\n          handleFieldChange={this.handleFieldChange}\n          footerDisplay={footerDisplay}\n          clearCompleted={this.clearCompleted}\n          completedAppears={this.completedAppears}\n          nonCompletedCount={this.nonCompletedCount}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}